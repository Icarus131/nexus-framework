{"version":3,"file":"react-nice-scroll.cjs.production.min.js","sources":["../src/allowScrollPlugin.ts","../src/willChangePlugin.ts","../src/state.ts","../src/animations.ts","../src/GellyElement.tsx","../src/utils.ts","../src/FixedElement.tsx","../src/HorizontalSection.tsx","../src/ParallaxImage.tsx","../src/ScrollContainer.tsx","../src/isTouch.ts","../src/SequenceSection.tsx"],"sourcesContent":["import Scrollbar from 'smooth-scrollbar';\r\n\r\nclass AllowScrollPlugin extends Scrollbar.ScrollbarPlugin {\r\n  static defaultOptions = {\r\n    allow: true,\r\n  };\r\n\r\n  transformDelta(delta: any) {\r\n    return this.options.allow ? delta : { x: 0, y: 0 };\r\n  }\r\n}\r\n\r\nAllowScrollPlugin.pluginName = 'allowScroll';\r\n\r\nexport default AllowScrollPlugin;\r\n","import Scrollbar from 'smooth-scrollbar';\r\n\r\nclass WillChangePlugin extends Scrollbar.ScrollbarPlugin {\r\n  transformDelta(delta: any, _evt: any) {\r\n    this.scrollbar.contentEl.style.willChange = 'transform';\r\n\r\n    return delta;\r\n  }\r\n\r\n  onRender(remainMomentum: { x: number; y: number }) {\r\n    if (remainMomentum.x === 0 && remainMomentum.y === 0) {\r\n      this.scrollbar.contentEl.style.willChange = '';\r\n    }\r\n  }\r\n}\r\n\r\nWillChangePlugin.pluginName = 'willChange';\r\n\r\nexport default WillChangePlugin;\r\n","import { createGlobalState } from 'react-hooks-global-state';\r\nimport { Scrollbar } from 'smooth-scrollbar/scrollbar';\r\n\r\ninterface State {\r\n  container: HTMLElement | HTMLDivElement | undefined;\r\n  smoothScrollBar: Scrollbar | undefined;\r\n  allowScroll: boolean;\r\n}\r\n\r\nexport const { useGlobalState } = createGlobalState<State>({\r\n  container: undefined,\r\n  smoothScrollBar: undefined,\r\n  allowScroll: true,\r\n});\r\n","import { gsap } from 'gsap';\r\n\r\nexport const gellyAnimation = (\r\n  element: HTMLDivElement | string,\r\n  velocity: number,\r\n  axis: 'skewY' | 'skewX',\r\n  intensity: number,\r\n  min: number,\r\n  max: number,\r\n  duration: number,\r\n  ease: string\r\n) => {\r\n  let proxy = { skew: 0 },\r\n    skewSetter = gsap.quickSetter(element, axis, 'deg'),\r\n    clamp = gsap.utils.clamp(min, max);\r\n\r\n  let skew = clamp(velocity / intensity);\r\n\r\n  if (Math.abs(skew) > Math.abs(proxy.skew)) {\r\n    proxy.skew = skew;\r\n  }\r\n  return gsap.to(proxy, {\r\n    skew: 0,\r\n    duration,\r\n    ease,\r\n    overwrite: true,\r\n    onUpdate: () => skewSetter(proxy.skew),\r\n    immediateRender: false,\r\n  });\r\n};\r\n\r\nexport const parallaxAnimation = (\r\n  element: HTMLElement | string,\r\n  trigger: gsap.DOMTarget | string,\r\n  scroller: HTMLElement | HTMLDivElement,\r\n  start: string,\r\n  end: string,\r\n  axis: 'y' | 'x',\r\n  fromPercent: number,\r\n  toPercent: number,\r\n  containerAnimation?: gsap.core.Animation\r\n) => {\r\n  return gsap\r\n    .timeline({\r\n      scrollTrigger: {\r\n        trigger,\r\n        scroller,\r\n        scrub: true,\r\n        start,\r\n        end,\r\n        pin: false,\r\n        containerAnimation,\r\n      },\r\n    })\r\n    .from(element, {\r\n      yPercent: axis === 'y' ? fromPercent : undefined,\r\n      xPercent: axis === 'x' ? fromPercent : undefined,\r\n      ease: 'none',\r\n      immediateRender: scroller === document.body,\r\n    })\r\n    .to(element, {\r\n      yPercent: axis === 'y' ? toPercent : undefined,\r\n      xPercent: axis === 'x' ? toPercent : undefined,\r\n      ease: 'none',\r\n    });\r\n};\r\n","import React, { FC, useLayoutEffect, useRef } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport { ScrollTrigger } from 'gsap/dist/ScrollTrigger';\r\nimport { useGlobalState } from './state';\r\nimport { gellyAnimation } from './animations';\r\ngsap.registerPlugin(ScrollTrigger);\r\n\r\ninterface GellyElementProps {\r\n  children: React.ReactNode;\r\n  trigger?: gsap.DOMTarget | string;\r\n  axis?: 'skewY' | 'skewX';\r\n  intensity?: number;\r\n  min?: number;\r\n  max?: number;\r\n  duration?: number;\r\n  ease?: string;\r\n  start?: string;\r\n  end?: string;\r\n}\r\n\r\nexport const GellyElement: FC<GellyElementProps> = ({\r\n  children,\r\n  axis = 'skewY',\r\n  trigger,\r\n  intensity = -400,\r\n  min = -40,\r\n  max = 40,\r\n  duration = 0.3,\r\n  ease = 'expo.out',\r\n  start = 'top bottom',\r\n  end = 'bottom top',\r\n  ...props\r\n}) => {\r\n  const gellyElement = useRef<null | HTMLDivElement>(null);\r\n  const [scroller] = useGlobalState('container');\r\n\r\n  useLayoutEffect(() => {\r\n    let animation: gsap.core.Tween | undefined;\r\n    const scrollTrigger = ScrollTrigger.create({\r\n      trigger: trigger || gellyElement.current,\r\n      scroller,\r\n      start,\r\n      end,\r\n      onUpdate: self => {\r\n        if (gellyElement.current)\r\n          animation = gellyAnimation(\r\n            gellyElement.current,\r\n            self.getVelocity(),\r\n            axis,\r\n            intensity,\r\n            min,\r\n            max,\r\n            duration,\r\n            ease\r\n          );\r\n      },\r\n    });\r\n\r\n    return () => {\r\n      animation?.kill();\r\n      scrollTrigger?.kill();\r\n    };\r\n  }, [\r\n    axis,\r\n    duration,\r\n    ease,\r\n    end,\r\n    intensity,\r\n    max,\r\n    min,\r\n    scroller,\r\n    start,\r\n    trigger,\r\n  ]);\r\n  return (\r\n    <div className=\"ns-gelly-element\" ref={gellyElement} {...props}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","export const preloadImage = (src: string) => {\r\n  return new Promise((resolve, reject) => {\r\n    const img = new Image();\r\n    const xhr = new XMLHttpRequest();\r\n\r\n    xhr.open('GET', src, true);\r\n    xhr.responseType = 'blob';\r\n    xhr.onload = () => {\r\n      img.src = URL.createObjectURL(xhr.response);\r\n      img.onload = () => resolve(img);\r\n    };\r\n    xhr.onerror = () => reject();\r\n    xhr.send();\r\n  });\r\n};\r\n\r\nexport const preloadImages = (urls: string[]) => {\r\n  return Promise.all(urls.map((src) => preloadImage(src)));\r\n};\r\n\r\nexport const calcDrawImage = (ctx: CanvasRenderingContext2D, image: any, left = 0.5, top = 0.5) => {\r\n  const cWidth = ctx.canvas.width;\r\n  const cHeight = ctx.canvas.height;\r\n  const width = image.width;\r\n  const height = image.height;\r\n  const ratio = width / height;\r\n  const cRatio = cWidth / cHeight;\r\n  let resultHeight, resultWidth;\r\n\r\n  if (ratio > cRatio) {\r\n    resultHeight = cHeight;\r\n    resultWidth = cHeight * ratio;\r\n  } else {\r\n    resultWidth = cWidth;\r\n    resultHeight = cWidth / ratio;\r\n  }\r\n\r\n  ctx.drawImage(image, (cWidth - resultWidth) * left, (cHeight - resultHeight) * top, resultWidth, resultHeight);\r\n};\r\n","import React, { FC, useLayoutEffect, useRef } from 'react';\r\nimport { useGlobalState } from './state';\r\n\r\ninterface FixedElementProps {\r\n  children: React.ReactNode;\r\n  top?: number;\r\n  right?: number;\r\n  left?: number;\r\n}\r\n\r\nexport const FixedElement: FC<FixedElementProps> = ({\r\n  children,\r\n  top = 0,\r\n  left,\r\n  right,\r\n  ...props\r\n}) => {\r\n  const fixedElement = useRef<HTMLDivElement | null>(null);\r\n  const [smoothScrollBar] = useGlobalState('smoothScrollBar');\r\n\r\n  useLayoutEffect(() => {\r\n    if (smoothScrollBar)\r\n      smoothScrollBar.addListener(({ offset }) => {\r\n        if (fixedElement.current) {\r\n          fixedElement.current.style.top = top + offset.y + 'px';\r\n          if (right !== undefined)\r\n            fixedElement.current.style.right = right + offset.x + 'px';\r\n          if (left !== undefined)\r\n            fixedElement.current.style.left = left + offset.x + 'px';\r\n        }\r\n      });\r\n    return () => {};\r\n  }, [left, right, smoothScrollBar, top]);\r\n  return (\r\n    <div\r\n      className=\"ns-fixed-element\"\r\n      ref={fixedElement}\r\n      style={{ top, left, right }}\r\n      {...props}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React, { FC, useLayoutEffect, useRef } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport { useGlobalState } from './state';\r\n\r\ninterface HorizontalSectionProps {\r\n  children: React.ReactNode;\r\n  toRight?: boolean;\r\n  start?: string;\r\n  addAnimation?: (fromTo: gsap.core.Tween) => void;\r\n}\r\n\r\nexport const HorizontalSection: FC<HorizontalSectionProps> = ({\r\n  children,\r\n  toRight = true,\r\n  start = 'top top',\r\n  addAnimation,\r\n  ...props\r\n}) => {\r\n  const horizontal = useRef<null | HTMLDivElement>(null);\r\n  const pinWrap = useRef<null | HTMLDivElement>(null);\r\n  const animationWrap = useRef<null | HTMLDivElement>(null);\r\n  const [scroller] = useGlobalState('container');\r\n\r\n  useLayoutEffect(() => {\r\n    let fromTo: gsap.core.Tween;\r\n    if (animationWrap.current) {\r\n      const scrollWidth = animationWrap.current.scrollWidth;\r\n      const getToValue = () => -(scrollWidth - window.innerWidth);\r\n\r\n      fromTo = gsap.fromTo(\r\n        animationWrap.current,\r\n        {\r\n          x: () => (toRight ? 0 : getToValue()),\r\n        },\r\n        {\r\n          x: () => (toRight ? getToValue() : 0),\r\n          ease: 'none',\r\n          scrollTrigger: {\r\n            trigger: horizontal.current,\r\n            scroller,\r\n            pinType: scroller === document.body ? 'fixed' : 'transform',\r\n            start,\r\n            end: () => '+=' + scrollWidth,\r\n            onEnter: () => {\r\n              if (horizontal.current) horizontal.current.style.willChange = 'transform';\r\n            },\r\n            onEnterBack: () => {\r\n              if (horizontal.current) horizontal.current.style.willChange = 'transform';\r\n            },\r\n            onLeave: () => {\r\n              if (horizontal.current) horizontal.current.style.willChange = '';\r\n            },\r\n            onLeaveBack: () => {\r\n              if (horizontal.current) horizontal.current.style.willChange = '';\r\n            },\r\n            pin: true,\r\n            invalidateOnRefresh: true,\r\n            anticipatePin: 1,\r\n            scrub: true,\r\n          },\r\n        }\r\n      );\r\n\r\n      if (addAnimation && fromTo) addAnimation(fromTo);\r\n    }\r\n    return () => {\r\n      fromTo?.kill();\r\n    };\r\n  }, [addAnimation, toRight, scroller, start]);\r\n\r\n  return (\r\n    <section className=\"ns-horizontal-section\" ref={horizontal} {...props}>\r\n      <div className=\"ns-horizontal-section__pin-wrap\" ref={pinWrap}>\r\n        <div className=\"ns-horizontal-section__animation-wrap\" ref={animationWrap}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </section>\r\n  );\r\n};\r\n","import React, { FC, useLayoutEffect, useRef } from 'react';\r\nimport { ScrollTrigger } from 'gsap/dist/ScrollTrigger';\r\nimport { useGlobalState } from './state';\r\nimport { parallaxAnimation } from './animations';\r\n\r\ninterface ParallaxImageProps {\r\n  src: string;\r\n  alt?: string;\r\n  triggerElement?: gsap.DOMTarget | string;\r\n  start?: string;\r\n  end?: string;\r\n  axis?: 'y' | 'x';\r\n  fromPercent?: number;\r\n  toPercent?: number;\r\n  containerHeight?: string;\r\n  imageScale?: number;\r\n  imageObjectPosition?: string;\r\n}\r\n\r\nexport const ParallaxImage: FC<ParallaxImageProps> = ({\r\n  src,\r\n  alt,\r\n  triggerElement,\r\n  start = 'top bottom',\r\n  end = 'bottom top',\r\n  axis = 'y',\r\n  fromPercent = -40,\r\n  toPercent = 40,\r\n  containerHeight = '100vh',\r\n  imageScale = 1.2,\r\n  imageObjectPosition = 'center',\r\n  ...props\r\n}) => {\r\n  const parallaxImage = useRef<HTMLElement | null>(null);\r\n  const parallaxImageInner = useRef<HTMLImageElement | null>(null);\r\n\r\n  const [scroller] = useGlobalState('container');\r\n\r\n  useLayoutEffect(() => {\r\n    const trigger = parallaxImage.current || triggerElement;\r\n    let animation: gsap.core.Timeline;\r\n\r\n    if (parallaxImageInner.current !== null && trigger && scroller) {\r\n      animation = parallaxAnimation(\r\n        parallaxImageInner.current,\r\n        trigger,\r\n        scroller,\r\n        start,\r\n        end,\r\n        axis,\r\n        fromPercent,\r\n        toPercent\r\n      );\r\n    }\r\n\r\n    return () => {\r\n      animation?.kill();\r\n    };\r\n  }, [\r\n    axis,\r\n    end,\r\n    fromPercent,\r\n    scroller,\r\n    start,\r\n    toPercent,\r\n    triggerElement,\r\n    containerHeight,\r\n    imageScale,\r\n    imageObjectPosition,\r\n  ]);\r\n\r\n  return (\r\n    <figure\r\n      className=\"ns-parallax-image\"\r\n      ref={parallaxImage}\r\n      style={{ height: `${containerHeight}` }}\r\n      {...props}\r\n    >\r\n      <img\r\n        ref={parallaxImageInner}\r\n        src={src}\r\n        alt={alt}\r\n        className=\"ns-parallax-image__inner\"\r\n        style={{\r\n          transform: `scale(${imageScale})`,\r\n          objectPosition: `${imageObjectPosition}`,\r\n        }}\r\n        loading=\"lazy\"\r\n        onLoad={() => ScrollTrigger.refresh()}\r\n      />\r\n    </figure>\r\n  );\r\n};\r\n","import React, { FC, useLayoutEffect, useRef } from 'react';\r\nimport SmoothScrollbar from 'smooth-scrollbar';\r\nimport AllowScrollPlugin from './allowScrollPlugin';\r\nimport WillChangePlugin from './willChangePlugin';\r\nimport { ScrollTrigger } from 'gsap/dist/ScrollTrigger';\r\nimport { useGlobalState } from './state';\r\nimport detectTouch from './isTouch';\r\nimport './styles.scss';\r\n\r\ninterface ScrollContainerProps {\r\n  children: React.ReactNode;\r\n  damping?: number;\r\n  thumbMinSize?: number;\r\n  renderByPixels?: boolean;\r\n  alwaysShowTracks?: boolean;\r\n  continuousScrolling?: boolean;\r\n  delegateTo?: EventTarget;\r\n  activeSmoothScrollOnTouchDevice?: boolean;\r\n  disableSmoothScroll?: boolean;\r\n}\r\n\r\nexport const ScrollContainer: FC<ScrollContainerProps> = ({\r\n  children,\r\n  damping = 0.075,\r\n  thumbMinSize = 20,\r\n  renderByPixels = false,\r\n  alwaysShowTracks = false,\r\n  continuousScrolling = true,\r\n  delegateTo,\r\n  activeSmoothScrollOnTouchDevice = false,\r\n  disableSmoothScroll = false,\r\n  ...props\r\n}) => {\r\n  const scrollContainer = useRef<HTMLDivElement | null>(null);\r\n\r\n  // @ts-ignore: Unreachable code error\r\n  const [_container, setContainer] = useGlobalState('container');\r\n  // @ts-ignore: Unreachable code error\r\n  const [_scrollBar, setScrollBar] = useGlobalState('smoothScrollBar');\r\n\r\n  useLayoutEffect(() => {\r\n    if (\r\n      (detectTouch() && !activeSmoothScrollOnTouchDevice) ||\r\n      disableSmoothScroll\r\n    ) {\r\n      if (scrollContainer.current) {\r\n        scrollContainer.current.style.overflow = 'auto';\r\n        scrollContainer.current.style.height = 'auto';\r\n        setContainer(document.body);\r\n      }\r\n      return;\r\n    }\r\n\r\n    SmoothScrollbar.use(AllowScrollPlugin, WillChangePlugin);\r\n    const view = scrollContainer.current;\r\n    if (view) {\r\n      const smoothScroll = SmoothScrollbar.init(view, {\r\n        damping,\r\n        thumbMinSize,\r\n        renderByPixels,\r\n        alwaysShowTracks,\r\n        continuousScrolling,\r\n        delegateTo,\r\n      });\r\n      if (smoothScroll) setScrollBar(smoothScroll);\r\n\r\n      ScrollTrigger.scrollerProxy(view, {\r\n        scrollTop(value) {\r\n          if (arguments.length && value) {\r\n            smoothScroll.scrollTop = value;\r\n          }\r\n          return smoothScroll.scrollTop;\r\n        },\r\n      });\r\n\r\n      smoothScroll.addListener(ScrollTrigger.update);\r\n\r\n      if (scrollContainer.current) setContainer(scrollContainer.current);\r\n    }\r\n\r\n    return () => {\r\n      SmoothScrollbar?.destroyAll();\r\n    };\r\n  }, [\r\n    alwaysShowTracks,\r\n    continuousScrolling,\r\n    damping,\r\n    renderByPixels,\r\n    thumbMinSize,\r\n    setContainer,\r\n    activeSmoothScrollOnTouchDevice,\r\n    disableSmoothScroll,\r\n    delegateTo,\r\n    setScrollBar,\r\n  ]);\r\n\r\n  return (\r\n    <div className=\"ns-container\" {...props} ref={scrollContainer}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","// @ts-nocheck\r\nconst detectTouch = () => {\r\n  if (typeof window !== 'undefined') {\r\n    return Boolean(\r\n      'ontouchstart' in window ||\r\n        window.navigator.maxTouchPoints > 0 ||\r\n        window.navigator.msMaxTouchPoints > 0 ||\r\n        (window.DocumentTouch && document instanceof DocumentTouch)\r\n    );\r\n  }\r\n};\r\n\r\nexport default detectTouch;\r\n","import React, { FC, useLayoutEffect, useRef } from 'react';\r\nimport { gsap } from 'gsap';\r\nimport { preloadImages, calcDrawImage } from './utils';\r\nimport { useGlobalState } from './state';\r\n\r\ninterface SequenceSectionProps {\r\n  imagesPath: string;\r\n  imagesType: string;\r\n  imagesCount: number;\r\n  start?: string;\r\n  end?: string;\r\n}\r\n\r\nexport const SequenceSection: FC<SequenceSectionProps> = ({\r\n  imagesPath,\r\n  imagesType,\r\n  imagesCount,\r\n  start = 'top top',\r\n  end = '200%',\r\n  ...props\r\n}) => {\r\n  const sequenceSection = useRef<HTMLDivElement | null>(null);\r\n  const sequenceSectionCanvas = useRef<HTMLCanvasElement | null>(null);\r\n  const [scroller] = useGlobalState('container');\r\n\r\n  useLayoutEffect(() => {\r\n    const urls = [];\r\n    for (let i = 0; i < imagesCount; i++) {\r\n      urls.push(`${imagesPath}/${i + 1}.${imagesType}`);\r\n    }\r\n\r\n    const images = preloadImages(urls);\r\n\r\n    let ctx: CanvasRenderingContext2D | null;\r\n    if (sequenceSectionCanvas.current) {\r\n      ctx = sequenceSectionCanvas.current.getContext('2d');\r\n    }\r\n\r\n    const tl = gsap.timeline({\r\n      scrollTrigger: {\r\n        trigger: sequenceSection.current,\r\n        scroller,\r\n        scrub: true,\r\n        start,\r\n        end,\r\n        pin: true,\r\n        pinType: scroller === document.body ? 'fixed' : 'transform',\r\n        onEnter: () => {\r\n          if (sequenceSection.current) sequenceSection.current.style.willChange = 'transform';\r\n        },\r\n        onEnterBack: () => {\r\n          if (sequenceSection.current) sequenceSection.current.style.willChange = 'transform';\r\n        },\r\n        onLeave: () => {\r\n          if (sequenceSection.current) sequenceSection.current.style.willChange = '';\r\n        },\r\n        onLeaveBack: () => {\r\n          if (sequenceSection.current) sequenceSection.current.style.willChange = '';\r\n        },\r\n      },\r\n    });\r\n\r\n    window.addEventListener(\r\n      'resize',\r\n      (function resize() {\r\n        ctx!.canvas.width = document.documentElement.clientWidth;\r\n        ctx!.canvas.height = document.documentElement.clientHeight;\r\n        return resize;\r\n      })()\r\n    );\r\n\r\n    images.then((imgs) => {\r\n      const counter = { i: 0 };\r\n\r\n      tl.to(\r\n        counter,\r\n        {\r\n          i: imgs.length - 1,\r\n          roundProps: 'i',\r\n          ease: 'none',\r\n          immediateRender: true,\r\n          onUpdate: () => {\r\n            if (ctx) calcDrawImage(ctx, imgs[counter.i]);\r\n          },\r\n        },\r\n        0\r\n      );\r\n\r\n      window.addEventListener('resize', () => {\r\n        if (ctx) calcDrawImage(ctx, imgs[counter.i]);\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      tl?.kill();\r\n    };\r\n  }, [end, imagesCount, imagesPath, imagesType, scroller, start]);\r\n\r\n  return (\r\n    <section className=\"ns-sequence-section\" ref={sequenceSection} {...props}>\r\n      <canvas className=\"ns-sequence-section__canvas\" ref={sequenceSectionCanvas} />\r\n    </section>\r\n  );\r\n};\r\n"],"names":["AllowScrollPlugin","transformDelta","delta","this","options","allow","x","y","Scrollbar","ScrollbarPlugin","pluginName","WillChangePlugin","_evt","scrollbar","contentEl","style","willChange","onRender","remainMomentum","useGlobalState","createGlobalState","container","undefined","smoothScrollBar","allowScroll","gellyAnimation","element","velocity","axis","intensity","min","max","duration","ease","proxy","skew","skewSetter","gsap","quickSetter","utils","clamp","Math","abs","to","overwrite","onUpdate","immediateRender","parallaxAnimation","trigger","scroller","start","end","fromPercent","toPercent","containerAnimation","timeline","scrollTrigger","scrub","pin","from","yPercent","xPercent","document","body","registerPlugin","ScrollTrigger","calcDrawImage","ctx","image","left","top","resultHeight","resultWidth","cWidth","canvas","width","cHeight","height","ratio","drawImage","children","right","props","fixedElement","useRef","useLayoutEffect","addListener","offset","current","React","className","ref","gellyElement","animation","create","self","getVelocity","kill","toRight","addAnimation","horizontal","pinWrap","animationWrap","fromTo","scrollWidth","getToValue","window","innerWidth","pinType","onEnter","onEnterBack","onLeave","onLeaveBack","invalidateOnRefresh","anticipatePin","src","alt","triggerElement","containerHeight","imageScale","imageObjectPosition","parallaxImage","parallaxImageInner","transform","objectPosition","loading","onLoad","refresh","damping","thumbMinSize","renderByPixels","alwaysShowTracks","continuousScrolling","delegateTo","activeSmoothScrollOnTouchDevice","disableSmoothScroll","scrollContainer","_container","_scrollBar","Boolean","navigator","maxTouchPoints","msMaxTouchPoints","DocumentTouch","detectTouch","SmoothScrollbar","use","view","smoothScroll","init","setScrollBar","scrollerProxy","scrollTop","value","arguments","length","update","setContainer","destroyAll","overflow","imagesPath","imagesType","imagesCount","sequenceSection","sequenceSectionCanvas","urls","i","push","images","Promise","all","map","resolve","reject","img","Image","xhr","XMLHttpRequest","open","responseType","onload","URL","createObjectURL","response","onerror","send","preloadImage","preloadImages","getContext","tl","addEventListener","resize","documentElement","clientWidth","clientHeight","then","imgs","counter","roundProps"],"mappings":"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"}