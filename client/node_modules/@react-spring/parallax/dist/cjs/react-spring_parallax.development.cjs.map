{"version":3,"sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useContext, useState, useRef, useEffect, CSSProperties } from 'react'\nimport { useMemoOne, useOnce, raf } from '@react-spring/shared'\nimport {\n  a,\n  Controller,\n  SpringConfig,\n  config as configs,\n} from '@react-spring/web'\n\nconst ParentContext = React.createContext<any>(null)\n\nfunction getScrollType(horizontal: boolean) {\n  return horizontal ? 'scrollLeft' : 'scrollTop'\n}\n\nfunction mapChildrenRecursive(\n  children: React.ReactNode,\n  callback: Function\n): React.ReactNode {\n  const isReactFragment = (node: any) => {\n    if (node.type) {\n      return node.type === React.Fragment\n    }\n    return node === React.Fragment\n  }\n\n  return React.Children.map(children, (child: any) =>\n    isReactFragment(child)\n      ? mapChildrenRecursive(child.props.children, callback)\n      : callback(child)\n  )\n}\n\nconst START_TRANSLATE_3D = 'translate3d(0px,0px,0px)'\nconst START_TRANSLATE = 'translate(0px,0px)'\n\nexport interface IParallaxLayer {\n  horizontal: boolean\n  sticky: StickyConfig\n  isSticky: boolean\n  setHeight(height: number, immediate?: boolean): void\n  setPosition(height: number, scrollTop: number, immediate?: boolean): void\n}\n\nexport interface IParallax {\n  config: ConfigProp\n  horizontal: boolean\n  busy: boolean\n  space: number\n  offset: number\n  current: number\n  controller: Controller<{ scroll: number }>\n  layers: Set<IParallaxLayer>\n  container: React.MutableRefObject<any>\n  content: React.MutableRefObject<any>\n  scrollTo(offset: number): void\n  update(): void\n  stop(): void\n}\n\ntype ViewProps = React.ComponentPropsWithoutRef<'div'>\n\ntype StickyConfig = { start?: number; end?: number } | undefined\n\nexport interface ParallaxLayerProps extends ViewProps {\n  horizontal?: boolean\n  /** Size of a page, (1=100%, 1.5=1 and 1/2, ...) */\n  factor?: number\n  /** Determines where the layer will be at when scrolled to (0=start, 1=1st page, ...) */\n  offset?: number\n  /** Shifts the layer in accordance to its offset, values can be positive or negative */\n  speed?: number\n  /** Layer will be sticky between these two offsets, all other props are ignored */\n  sticky?: StickyConfig\n}\n\nexport const ParallaxLayer = React.memo(\n  React.forwardRef<IParallaxLayer, ParallaxLayerProps>(\n    (\n      { horizontal, factor = 1, offset = 0, speed = 0, sticky, ...rest },\n      ref\n    ) => {\n      // Our parent controls our height and position.\n      const parent = useContext<IParallax>(ParentContext)\n\n      // This is how we animate.\n      const ctrl = useMemoOne(() => {\n        let translate\n        if (sticky) {\n          const start = sticky.start || 0\n          translate = start * parent.space\n        } else {\n          const targetScroll = Math.floor(offset) * parent.space\n          const distance = parent.space * offset + targetScroll * speed\n          translate = -(parent.current * speed) + distance\n        }\n        type Animated = { space: number; translate: number }\n        return new Controller<Animated>({\n          space: sticky ? parent.space : parent.space * factor,\n          translate,\n        })\n      }, [])\n\n      // Create the layer.\n      const layer = useMemoOne<IParallaxLayer>(\n        () => ({\n          horizontal:\n            horizontal === undefined || sticky ? parent.horizontal : horizontal,\n          sticky: undefined,\n          isSticky: false,\n          setPosition(height, scrollTop, immediate = false) {\n            if (sticky) {\n              setSticky(height, scrollTop)\n            } else {\n              const targetScroll = Math.floor(offset) * height\n              const distance = height * offset + targetScroll * speed\n              ctrl.start({\n                translate: -(scrollTop * speed) + distance,\n                config: parent.config,\n                immediate,\n              })\n            }\n          },\n          setHeight(height, immediate = false) {\n            ctrl.start({\n              space: sticky ? height : height * factor,\n              config: parent.config,\n              immediate,\n            })\n          },\n        }),\n        []\n      )\n\n      useOnce(() => {\n        if (sticky) {\n          const start = sticky.start || 0\n          const end = sticky.end || start + 1\n          layer.sticky = { start, end }\n        }\n      })\n\n      React.useImperativeHandle(ref, () => layer)\n\n      const layerRef = useRef<any>()\n\n      const setSticky = (height: number, scrollTop: number) => {\n        const start = layer.sticky!.start! * height\n        const end = layer.sticky!.end! * height\n        const isSticky = scrollTop >= start && scrollTop <= end\n\n        if (isSticky === layer.isSticky) return\n        layer.isSticky = isSticky\n\n        const ref = layerRef.current\n        ref.style.position = isSticky ? 'sticky' : 'absolute'\n        ctrl.set({\n          translate: isSticky ? 0 : scrollTop < start ? start : end,\n        })\n      }\n\n      // Register the layer with our parent.\n      useOnce(() => {\n        if (parent) {\n          parent.layers.add(layer)\n          parent.update()\n          return () => {\n            parent.layers.delete(layer)\n            parent.update()\n          }\n        }\n      })\n\n      const translate3d = ctrl.springs.translate.to(\n        layer.horizontal\n          ? x => `translate3d(${x}px,0,0)`\n          : y => `translate3d(0,${y}px,0)`\n      )\n\n      return (\n        <a.div\n          {...rest}\n          ref={layerRef}\n          style={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            backgroundSize: 'auto',\n            backgroundRepeat: 'no-repeat',\n            willChange: 'transform',\n            [layer.horizontal ? 'height' : 'width']: '100%',\n            [layer.horizontal ? 'width' : 'height']: ctrl.springs.space,\n            WebkitTransform: translate3d,\n            msTransform: translate3d,\n            transform: translate3d,\n            ...rest.style,\n          }}\n        />\n      )\n    }\n  )\n)\n\ntype ConfigProp = SpringConfig | ((key: string) => SpringConfig)\n\nexport interface ParallaxProps extends ViewProps {\n  /** Determines the total space of the inner content where each page takes 100% of the visible container */\n  pages: number\n  config?: ConfigProp\n  enabled?: boolean\n  horizontal?: boolean\n  innerStyle?: CSSProperties\n  children: React.ReactNode\n}\n\nexport const Parallax = React.memo(\n  React.forwardRef<IParallax, ParallaxProps>((props, ref) => {\n    const [ready, setReady] = useState(false)\n    const {\n      pages,\n      innerStyle: _innerStyle,\n      config = configs.slow,\n      enabled = true,\n      horizontal = false,\n      children,\n      ...rest\n    } = props\n\n    const containerRef = useRef<any>()\n    const contentRef = useRef<any>()\n\n    const state: IParallax = useMemoOne(\n      () => ({\n        config,\n        horizontal,\n        busy: false,\n        space: 0,\n        current: 0,\n        offset: 0,\n        controller: new Controller({ scroll: 0 }),\n        layers: new Set<IParallaxLayer>(),\n        container: containerRef,\n        content: contentRef,\n        update: () => update(),\n        scrollTo: offset => scrollTo(offset),\n        stop: () => state.controller.stop(),\n      }),\n      []\n    )\n\n    useEffect(() => {\n      state.config = config\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [config])\n\n    React.useImperativeHandle(ref, () => state)\n\n    const update = () => {\n      const container = containerRef.current\n      if (!container) return\n\n      const spaceProp = horizontal ? 'clientWidth' : 'clientHeight'\n      state.space = container[spaceProp]\n\n      const scrollType = getScrollType(horizontal)\n      if (enabled) {\n        state.current = container[scrollType]\n      } else {\n        container[scrollType] = state.current = state.offset * state.space\n      }\n\n      const content = contentRef.current\n      if (content) {\n        const sizeProp = horizontal ? 'width' : 'height'\n        content.style[sizeProp] = `${state.space * pages}px`\n      }\n\n      state.layers.forEach(layer => {\n        layer.setHeight(state.space, true)\n        layer.setPosition(state.space, state.current, true)\n      })\n    }\n\n    const scrollTo = (offset: number) => {\n      const container = containerRef.current\n      const scrollType = getScrollType(horizontal)\n\n      state.offset = offset\n\n      state.controller.set({ scroll: state.current })\n      state.controller.stop().start({\n        scroll: offset * state.space,\n        config,\n        onChange({ value: { scroll } }: any) {\n          container[scrollType] = scroll\n        },\n      })\n    }\n\n    const onScroll = (event: any) => {\n      if (!state.busy) {\n        state.busy = true\n        state.current = event.target[getScrollType(horizontal)]\n        raf.onStart(() => {\n          state.layers.forEach(layer =>\n            layer.setPosition(state.space, state.current)\n          )\n          state.busy = false\n        })\n      }\n    }\n\n    useEffect(() => state.update())\n    useOnce(() => {\n      setReady(true)\n\n      const onResize = () => {\n        const update = () => state.update()\n        raf.onFrame(update)\n        setTimeout(update, 150) // Some browsers don't fire on maximize!\n      }\n\n      window.addEventListener('resize', onResize, false)\n      return () => window.removeEventListener('resize', onResize, false)\n    })\n\n    const overflow: React.CSSProperties = enabled\n      ? {\n          overflowY: horizontal ? 'hidden' : 'scroll',\n          overflowX: horizontal ? 'scroll' : 'hidden',\n        }\n      : {\n          overflowY: 'hidden',\n          overflowX: 'hidden',\n        }\n\n    return (\n      <a.div\n        {...rest}\n        ref={containerRef}\n        onScroll={onScroll}\n        onWheel={enabled ? state.stop : undefined}\n        onTouchStart={enabled ? state.stop : undefined}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          ...overflow,\n          WebkitOverflowScrolling: 'touch',\n          WebkitTransform: START_TRANSLATE,\n          msTransform: START_TRANSLATE,\n          transform: START_TRANSLATE_3D,\n          ...rest.style,\n        }}\n      >\n        {ready && (\n          <>\n            <a.div\n              ref={contentRef}\n              style={{\n                overflow: 'hidden',\n                position: 'absolute',\n                [horizontal ? 'height' : 'width']: '100%',\n                [horizontal ? 'width' : 'height']: state.space * pages,\n                WebkitTransform: START_TRANSLATE,\n                msTransform: START_TRANSLATE,\n                transform: START_TRANSLATE_3D,\n                ...props.innerStyle,\n              }}\n            >\n              <ParentContext.Provider value={state}>\n                {mapChildrenRecursive(\n                  children,\n                  (child: any) => !child.props.sticky && child\n                )}\n              </ParentContext.Provider>\n            </a.div>\n            <ParentContext.Provider value={state}>\n              {mapChildrenRecursive(\n                children,\n                (child: any) => child.props.sticky && child\n              )}\n            </ParentContext.Provider>\n          </>\n        )}\n      </a.div>\n    )\n  })\n)\n"],"mappings":"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","names":["ref","configs","update"]}