{"version":3,"sources":["../../src/index.tsx"],"sourcesContent":["import * as React from 'react'\nimport { useContext, useState, useRef, useEffect, CSSProperties } from 'react'\nimport { useMemoOne, useOnce, raf } from '@react-spring/shared'\nimport {\n  a,\n  Controller,\n  SpringConfig,\n  config as configs,\n} from '@react-spring/web'\n\nconst ParentContext = React.createContext<any>(null)\n\nfunction getScrollType(horizontal: boolean) {\n  return horizontal ? 'scrollLeft' : 'scrollTop'\n}\n\nfunction mapChildrenRecursive(\n  children: React.ReactNode,\n  callback: Function\n): React.ReactNode {\n  const isReactFragment = (node: any) => {\n    if (node.type) {\n      return node.type === React.Fragment\n    }\n    return node === React.Fragment\n  }\n\n  return React.Children.map(children, (child: any) =>\n    isReactFragment(child)\n      ? mapChildrenRecursive(child.props.children, callback)\n      : callback(child)\n  )\n}\n\nconst START_TRANSLATE_3D = 'translate3d(0px,0px,0px)'\nconst START_TRANSLATE = 'translate(0px,0px)'\n\nexport interface IParallaxLayer {\n  horizontal: boolean\n  sticky: StickyConfig\n  isSticky: boolean\n  setHeight(height: number, immediate?: boolean): void\n  setPosition(height: number, scrollTop: number, immediate?: boolean): void\n}\n\nexport interface IParallax {\n  config: ConfigProp\n  horizontal: boolean\n  busy: boolean\n  space: number\n  offset: number\n  current: number\n  controller: Controller<{ scroll: number }>\n  layers: Set<IParallaxLayer>\n  container: React.MutableRefObject<any>\n  content: React.MutableRefObject<any>\n  scrollTo(offset: number): void\n  update(): void\n  stop(): void\n}\n\ntype ViewProps = React.ComponentPropsWithoutRef<'div'>\n\ntype StickyConfig = { start?: number; end?: number } | undefined\n\nexport interface ParallaxLayerProps extends ViewProps {\n  horizontal?: boolean\n  /** Size of a page, (1=100%, 1.5=1 and 1/2, ...) */\n  factor?: number\n  /** Determines where the layer will be at when scrolled to (0=start, 1=1st page, ...) */\n  offset?: number\n  /** Shifts the layer in accordance to its offset, values can be positive or negative */\n  speed?: number\n  /** Layer will be sticky between these two offsets, all other props are ignored */\n  sticky?: StickyConfig\n}\n\nexport const ParallaxLayer = React.memo(\n  React.forwardRef<IParallaxLayer, ParallaxLayerProps>(\n    (\n      { horizontal, factor = 1, offset = 0, speed = 0, sticky, ...rest },\n      ref\n    ) => {\n      // Our parent controls our height and position.\n      const parent = useContext<IParallax>(ParentContext)\n\n      // This is how we animate.\n      const ctrl = useMemoOne(() => {\n        let translate\n        if (sticky) {\n          const start = sticky.start || 0\n          translate = start * parent.space\n        } else {\n          const targetScroll = Math.floor(offset) * parent.space\n          const distance = parent.space * offset + targetScroll * speed\n          translate = -(parent.current * speed) + distance\n        }\n        type Animated = { space: number; translate: number }\n        return new Controller<Animated>({\n          space: sticky ? parent.space : parent.space * factor,\n          translate,\n        })\n      }, [])\n\n      // Create the layer.\n      const layer = useMemoOne<IParallaxLayer>(\n        () => ({\n          horizontal:\n            horizontal === undefined || sticky ? parent.horizontal : horizontal,\n          sticky: undefined,\n          isSticky: false,\n          setPosition(height, scrollTop, immediate = false) {\n            if (sticky) {\n              setSticky(height, scrollTop)\n            } else {\n              const targetScroll = Math.floor(offset) * height\n              const distance = height * offset + targetScroll * speed\n              ctrl.start({\n                translate: -(scrollTop * speed) + distance,\n                config: parent.config,\n                immediate,\n              })\n            }\n          },\n          setHeight(height, immediate = false) {\n            ctrl.start({\n              space: sticky ? height : height * factor,\n              config: parent.config,\n              immediate,\n            })\n          },\n        }),\n        []\n      )\n\n      useOnce(() => {\n        if (sticky) {\n          const start = sticky.start || 0\n          const end = sticky.end || start + 1\n          layer.sticky = { start, end }\n        }\n      })\n\n      React.useImperativeHandle(ref, () => layer)\n\n      const layerRef = useRef<any>()\n\n      const setSticky = (height: number, scrollTop: number) => {\n        const start = layer.sticky!.start! * height\n        const end = layer.sticky!.end! * height\n        const isSticky = scrollTop >= start && scrollTop <= end\n\n        if (isSticky === layer.isSticky) return\n        layer.isSticky = isSticky\n\n        const ref = layerRef.current\n        ref.style.position = isSticky ? 'sticky' : 'absolute'\n        ctrl.set({\n          translate: isSticky ? 0 : scrollTop < start ? start : end,\n        })\n      }\n\n      // Register the layer with our parent.\n      useOnce(() => {\n        if (parent) {\n          parent.layers.add(layer)\n          parent.update()\n          return () => {\n            parent.layers.delete(layer)\n            parent.update()\n          }\n        }\n      })\n\n      const translate3d = ctrl.springs.translate.to(\n        layer.horizontal\n          ? x => `translate3d(${x}px,0,0)`\n          : y => `translate3d(0,${y}px,0)`\n      )\n\n      return (\n        <a.div\n          {...rest}\n          ref={layerRef}\n          style={{\n            position: 'absolute',\n            top: 0,\n            bottom: 0,\n            left: 0,\n            right: 0,\n            backgroundSize: 'auto',\n            backgroundRepeat: 'no-repeat',\n            willChange: 'transform',\n            [layer.horizontal ? 'height' : 'width']: '100%',\n            [layer.horizontal ? 'width' : 'height']: ctrl.springs.space,\n            WebkitTransform: translate3d,\n            msTransform: translate3d,\n            transform: translate3d,\n            ...rest.style,\n          }}\n        />\n      )\n    }\n  )\n)\n\ntype ConfigProp = SpringConfig | ((key: string) => SpringConfig)\n\nexport interface ParallaxProps extends ViewProps {\n  /** Determines the total space of the inner content where each page takes 100% of the visible container */\n  pages: number\n  config?: ConfigProp\n  enabled?: boolean\n  horizontal?: boolean\n  innerStyle?: CSSProperties\n  children: React.ReactNode\n}\n\nexport const Parallax = React.memo(\n  React.forwardRef<IParallax, ParallaxProps>((props, ref) => {\n    const [ready, setReady] = useState(false)\n    const {\n      pages,\n      innerStyle: _innerStyle,\n      config = configs.slow,\n      enabled = true,\n      horizontal = false,\n      children,\n      ...rest\n    } = props\n\n    const containerRef = useRef<any>()\n    const contentRef = useRef<any>()\n\n    const state: IParallax = useMemoOne(\n      () => ({\n        config,\n        horizontal,\n        busy: false,\n        space: 0,\n        current: 0,\n        offset: 0,\n        controller: new Controller({ scroll: 0 }),\n        layers: new Set<IParallaxLayer>(),\n        container: containerRef,\n        content: contentRef,\n        update: () => update(),\n        scrollTo: offset => scrollTo(offset),\n        stop: () => state.controller.stop(),\n      }),\n      []\n    )\n\n    useEffect(() => {\n      state.config = config\n      // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [config])\n\n    React.useImperativeHandle(ref, () => state)\n\n    const update = () => {\n      const container = containerRef.current\n      if (!container) return\n\n      const spaceProp = horizontal ? 'clientWidth' : 'clientHeight'\n      state.space = container[spaceProp]\n\n      const scrollType = getScrollType(horizontal)\n      if (enabled) {\n        state.current = container[scrollType]\n      } else {\n        container[scrollType] = state.current = state.offset * state.space\n      }\n\n      const content = contentRef.current\n      if (content) {\n        const sizeProp = horizontal ? 'width' : 'height'\n        content.style[sizeProp] = `${state.space * pages}px`\n      }\n\n      state.layers.forEach(layer => {\n        layer.setHeight(state.space, true)\n        layer.setPosition(state.space, state.current, true)\n      })\n    }\n\n    const scrollTo = (offset: number) => {\n      const container = containerRef.current\n      const scrollType = getScrollType(horizontal)\n\n      state.offset = offset\n\n      state.controller.set({ scroll: state.current })\n      state.controller.stop().start({\n        scroll: offset * state.space,\n        config,\n        onChange({ value: { scroll } }: any) {\n          container[scrollType] = scroll\n        },\n      })\n    }\n\n    const onScroll = (event: any) => {\n      if (!state.busy) {\n        state.busy = true\n        state.current = event.target[getScrollType(horizontal)]\n        raf.onStart(() => {\n          state.layers.forEach(layer =>\n            layer.setPosition(state.space, state.current)\n          )\n          state.busy = false\n        })\n      }\n    }\n\n    useEffect(() => state.update())\n    useOnce(() => {\n      setReady(true)\n\n      const onResize = () => {\n        const update = () => state.update()\n        raf.onFrame(update)\n        setTimeout(update, 150) // Some browsers don't fire on maximize!\n      }\n\n      window.addEventListener('resize', onResize, false)\n      return () => window.removeEventListener('resize', onResize, false)\n    })\n\n    const overflow: React.CSSProperties = enabled\n      ? {\n          overflowY: horizontal ? 'hidden' : 'scroll',\n          overflowX: horizontal ? 'scroll' : 'hidden',\n        }\n      : {\n          overflowY: 'hidden',\n          overflowX: 'hidden',\n        }\n\n    return (\n      <a.div\n        {...rest}\n        ref={containerRef}\n        onScroll={onScroll}\n        onWheel={enabled ? state.stop : undefined}\n        onTouchStart={enabled ? state.stop : undefined}\n        style={{\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          ...overflow,\n          WebkitOverflowScrolling: 'touch',\n          WebkitTransform: START_TRANSLATE,\n          msTransform: START_TRANSLATE,\n          transform: START_TRANSLATE_3D,\n          ...rest.style,\n        }}\n      >\n        {ready && (\n          <>\n            <a.div\n              ref={contentRef}\n              style={{\n                overflow: 'hidden',\n                position: 'absolute',\n                [horizontal ? 'height' : 'width']: '100%',\n                [horizontal ? 'width' : 'height']: state.space * pages,\n                WebkitTransform: START_TRANSLATE,\n                msTransform: START_TRANSLATE,\n                transform: START_TRANSLATE_3D,\n                ...props.innerStyle,\n              }}\n            >\n              <ParentContext.Provider value={state}>\n                {mapChildrenRecursive(\n                  children,\n                  (child: any) => !child.props.sticky && child\n                )}\n              </ParentContext.Provider>\n            </a.div>\n            <ParentContext.Provider value={state}>\n              {mapChildrenRecursive(\n                children,\n                (child: any) => child.props.sticky && child\n              )}\n            </ParentContext.Provider>\n          </>\n        )}\n      </a.div>\n    )\n  })\n)\n"],"mappings":"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","names":["src_exports","__export","Parallax","ParallaxLayer","__toCommonJS","React","import_react","import_shared","import_web","ParentContext","getScrollType","horizontal","mapChildrenRecursive","children","callback","isReactFragment","node","child","START_TRANSLATE_3D","START_TRANSLATE","factor","offset","speed","sticky","rest","ref","parent","ctrl","translate","targetScroll","distance","layer","height","scrollTop","immediate","setSticky","start","end","layerRef","isSticky","translate3d","x","y","props","ready","setReady","pages","_innerStyle","config","configs","enabled","containerRef","contentRef","state","update","scrollTo","container","spaceProp","scrollType","content","sizeProp","scroll","onScroll","event","onResize","overflow"]}