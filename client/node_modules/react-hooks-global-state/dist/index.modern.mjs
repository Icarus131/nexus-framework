import{useReducer as t,useEffect as e,useRef as r,useState as o,useCallback as n}from"react";function s(){return(s=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var r=arguments[e];for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(t[o]=r[o])}return t}).apply(this,arguments)}const c=(t,e)=>{if(!t.includes(e))throw new Error(`'${e}' not found. It must be provided in initialState as a property key.`)},a="production"!==process.env.NODE_ENV?Symbol("UPDATE_STATE"):Symbol(),l=(l,u)=>{const i=Object.keys(u);let p=u,d=null;const f={};i.forEach(t=>{f[t]=new Set});const E=(t,e)=>e.type===a?e.r?e.r(t):e.e:l(t,e),S=(t,e)=>{"production"!==process.env.NODE_ENV&&c(i,t);const r=r=>{return s({},r,{[t]:(o=r[t],n=e,"function"==typeof n?n(o):n)});var o,n};if(d)d({type:a,r});else{p=r(p);const e=p[t];f[t].forEach(t=>t(e))}},b=(t,e)=>{i.forEach(r=>{const o=e[r];t[r]!==o&&f[r].forEach(t=>t(o))})};return{useGlobalStateProvider:()=>{const[o,n]=t(E,p);e(()=>{if(d)throw new Error("Only one global state provider is allowed");return d=n,n({type:a,e:p}),()=>{d=null}},[]);const s=r(o);b(s.current,o),s.current=o,e(()=>{p=o},[o])},useGlobalState:t=>{"production"!==process.env.NODE_ENV&&c(i,t);const[r,s]=o(p[t]);return e(()=>(f[t].add(s),s(p[t]),()=>{f[t].delete(s)}),[t]),[r,n(e=>S(t,e),[t])]},getGlobalState:t=>("production"!==process.env.NODE_ENV&&c(i,t),p[t]),setGlobalState:S,getState:()=>p,setState:t=>{if(d)d({type:a,e:t});else{const e=p;p=t,b(e,p)}},dispatch:t=>{if(d)d(t);else{const e=p;p=l(p,t),b(e,p)}return t}}},u=t=>l((t,e)=>t,t),i=(t,e=t(void 0,{type:void 0}),r)=>r?r(i)(t,e):l(t,e),p=()=>{if(!window.__REDUX_DEVTOOLS_EXTENSION__)return t=>t;const{before:t,after:e}=(()=>{let t,e;return{before:r=>(o,n,c)=>{if(t=o,e=n,c)return c(r)(o,n);const a=r(o,n);return s({},a,{useGlobalState:t=>{const[e]=a.useGlobalState(t);return[e,()=>{throw new Error("Update is not allowed when using DevTools")}]}})},after:r=>(o,n,c)=>{if(c)return c(r)(o,n);const a=r(t,e);let l=s({},o(n,{type:"@@redux/INIT"}),e);const u=[];return s({},a,{getState:()=>l,dispatch:t=>(l=o(l,t),a.setState(l.computedStates[l.currentStateIndex].state),u.forEach(t=>t()),t),subscribe:t=>(u.push(t),()=>{const e=u.indexOf(t);u.splice(e,1)})})}}})();return((...t)=>t.reduce((t,e)=>(...r)=>t(e(...r))))(t,window.__REDUX_DEVTOOLS_EXTENSION__(),e)};export{u as createGlobalState,i as createStore,p as reduxDevToolsExt};
//# sourceMappingURL=index.modern.mjs.map
